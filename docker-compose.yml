version: '3.8'

services:
  # MongoDB Database (Using Atlas - local MongoDB commented out)
  # mongodb:
  #   image: mongo:7.0
  #   container_name: expense_mongodb
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: password123
  #     MONGO_INITDB_DATABASE: expense_management
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_data:/data/db
  #     - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #   networks:
  #     - expense_network

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: expense_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb+srv://sayantanhalder78_db_user:8MNa3JM2KXLLbb15@xpenseflow.bootzx1.mongodb.net/expense_management?retryWrites=true&w=majority&appName=XpenseFlow
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production-minimum-32-characters
      JWT_EXPIRE: 15m
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-this-in-production-minimum-32-characters
      JWT_REFRESH_EXPIRE: 7d
      CLIENT_URL: http://localhost:5173
      BCRYPT_ROUNDS: 12
      LOG_LEVEL: info
    ports:
      - "3000:3000"
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/logs:/app/logs
    # depends_on:
    #   - mongodb  # Commented out since using Atlas
    networks:
      - expense_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: expense_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3000/api
      VITE_APP_NAME: Expense Management System
      VITE_APP_VERSION: 1.0.0
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - expense_network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: expense_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - expense_network

volumes:
  mongodb_data:
    driver: local

networks:
  expense_network:
    driver: bridge
